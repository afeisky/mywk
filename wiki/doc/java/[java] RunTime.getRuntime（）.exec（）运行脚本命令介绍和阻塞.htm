<h1 class="postTitle">
	<a class="postTitle2" href="http://www.cnblogs.com/tohxyblog/p/6501396.html" id="cb_post_title_url">RunTime.getRuntime（）.exec（）运行脚本命令介绍和阻塞</a></h1>
<div id="cnblogs_post_body">
	<div>
		&nbsp;java在企业级项目开发中，无论是强制性的功能需要，还是为了简便java的实现，需要调用服务器命令脚本来执行。在java中，RunTime.getRuntime（）.exec（）就实现了这个功能。<br />
		<br />
		&nbsp;&nbsp;&nbsp;&nbsp;用法： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String command)-----在单独的进程中执行指定的字符串命令。</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String [] cmdArray)---在单独的进程中执行指定命令和变量</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String command, String [] envp)----在指定环境的独立进程中执行指定命令和变量</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String [] cmdArray, String [] envp)----在指定环境的独立进程中执行指定的命令和变量</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String command,String[] envp,File dir)----在有指定环境和工作目录的独立进程中执行指定的字符串命令</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;public Process exec(String[] cmdarray,String[] envp,File dir)----在指定环境和工作目录的独立进程中执行指定的命令和变量</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;</div>
	<div>
		举例：</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.&nbsp;&nbsp;RunTime.getRuntime（）.exec（String&nbsp;&nbsp;command）;<br />
		&nbsp;<br />
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在windows下相当于直接调用&nbsp;&nbsp;&nbsp;/开始/搜索程序和文件&nbsp;&nbsp;的指令，比如 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runtime.getRuntime().exec(&quot;notepad.exe&quot;); &nbsp;-------打开windows下记事本。</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2. &nbsp;public Process exec(String [] cmdArray)；</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Linux下：</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runtime.getRuntime().exec(new String[]{&quot;/bin/sh&quot;,&quot;-c&quot;, &quot;;</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Windows下：</div>
	<div>
		&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Runtime.getRuntime().exec(new String[]{&nbsp;&quot;cmd&quot;, &quot;/c&quot;, cmds});</div>
	<div>
		&nbsp;</div>
	<div>
		&nbsp;</div>
	<div>
		<span style="color: #333333; font-family: Verdana, &quot;Lucida Grande&quot;, Arial, Helvetica, sans-serif">深入： &nbsp;</span></div>
	<div>
		<span style="color: #333333; font-family: Verdana, &quot;Lucida Grande&quot;, Arial, Helvetica, sans-serif">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Process的几种方法：</span></div>
	<div>
		<div>
			<span style="color: #333333">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1.destroy()：杀掉子进程</span></div>
		<div>
			&nbsp;</div>
		<div>
			2.exitValue()：返回子进程的出口值，值 0 表示正常终止</div>
		<div>
			&nbsp;</div>
		<div>
			3.getErrorStream()：获取子进程的错误流</div>
		<div>
			&nbsp;</div>
		<div>
			4.getInputStream()：获取子进程的输入流</div>
		<div>
			&nbsp;</div>
		<div>
			5.getOutputStream()：获取子进程的输出流</div>
		<div>
			&nbsp;</div>
		<div>
			6.waitFor()：导致当前线程等待，如有必要，一直要等到由该 Process 对象表示的进程已经终止。如果已终止该子进程，此方法立即返回。如果没有终止该子进程，调用的线程将被阻塞，直到退出子进程，根据惯例，0 表示正常终止</div>
		<div>
			&nbsp;</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000">&nbsp;&nbsp;注意：在java中，调用runtime线程执行脚本是非常消耗资源的，所以切忌不要频繁使用！</span></div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在调用runtime去执行脚本的时候，其实就是JVM开了一个子线程去调用JVM所在系统的命令，其中开了三个通道： 输入流、输出流、错误流，其中输出流就是子线程走调用的通道。</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;大家都知道，waitFor是等待子线程执行命令结束后才执行， 但是在runtime中，打开程序的命令如果不关闭，就不算子线程结束。比如以下代码。</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #ff0000">&nbsp;代码：private static Process p = null;</span></div>
		<div>
			<span style="color: #ff0000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p = Runtime.getRuntime().exec(&quot;notepad.exe&quot;);</span></div>
		<div>
			<span style="color: #ff0000">&nbsp;&nbsp;&nbsp;&nbsp;p.waitFor(); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></div>
		<div>
			<span style="color: #ff0000">System.out.println(&quot;--------------------------------------------我被执行了&quot;);</span></div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;以上代码中，打开windows中记事本。如果我们不手动关闭记事本，那么输出语句就不会被执行，这点是需要理解的。 &nbsp;</div>
		<div>
			&nbsp;</div>
		<div>
			&nbsp;&nbsp;process的阻塞：</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在runtime执行大点的命令中，输入流和错误流会不断有流进入存储在JVM的缓冲区中，如果缓冲区的流不被读取被填满时，就会造成runtime的阻塞。所以在进行比如：大文件复制等的操作时，我们还需要不断的去读取JVM中的缓冲区的流，来防止Runtime的死锁阻塞。</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;代码：linux中拷贝文件防止阻塞的写法</div>
		<div>
			&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: #b4b4b4">&nbsp;&nbsp;&nbsp;</span></div>
	</div>
</div>
<div id="BlogPostCategory">
	分类: <a href="http://www.cnblogs.com/tohxyblog/category/952771.html" target="_blank">java</a></div>
<div>
	&nbsp;</div>
<div>
	&nbsp;</div>
<div>
	<h2>
		<span style="font-family:'Microsoft YaHei'"><span style="font-size:14px">ProcessBuilder 、Runtime区别</span></span></h2>
	<blockquote style="margin:0 0 0 40px; border:none; padding:0px">
		<p>
			<span style="font-family:'Microsoft YaHei'"><span style="font-size:14px">ProcessBuilder.start() 和 Runtime.exec()传递的参数有所不同，Runtime.exec()可接受一个单独的字符串，这个字符串是通过空格来分隔可执行命令程序和参数的；</span></span></p>
	</blockquote>
	<span style="font-family:'Microsoft YaHei'"><span style="font-size:14px">也可以接受字符串数组参数。而ProcessBuilder的构造函数是一个字符串列表或者数组。<em><u>列表中第一个参数是可执行命令程序</u></em>，其他的是命令行执行是需要的参数。&nbsp;<br />
	</span></span>
	<blockquote style="margin:0 0 0 40px; border:none; padding:0px">
		<p>
			<span style="font-family:'Microsoft YaHei'"><span style="font-size:14px">通过查看JDK源码可知，<u><em>Runtime.exec最终是通过调用ProcessBuilder来真正执行操作的</em></u>。</span></span></p>
		<p>
			<span style="font-family:Microsoft YaHei; font-size:12px">&nbsp;</span></p>
	</blockquote>
	<div class="dp-highlighter bg_java">
		<div class="bar">
			<div class="tools">
				<b>[java]</b> <a class="ViewSource" href="http://blog.csdn.net/sunshine_pb/article/details/39120927#" target="_blank" title="view plain">view plain</a><span data-mod="popu_168"> <a class="CopyToClipboard" href="http://blog.csdn.net/sunshine_pb/article/details/39120927#" target="_blank" title="copy">copy</a></span><span data-mod="popu_169"> </span></div>
		</div>
		<ol class="dp-j" start="1">
			<li class="alt">
				<span><span class="keyword">import</span><span>&nbsp;java.io.BufferedReader;&nbsp;&nbsp;</span></span></li>
			<li>
				<span><span class="keyword">import</span><span>&nbsp;java.io.File;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span><span class="keyword">import</span><span>&nbsp;java.io.IOException;&nbsp;&nbsp;</span></span></li>
			<li>
				<span><span class="keyword">import</span><span>&nbsp;java.io.InputStream;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span><span class="keyword">import</span><span>&nbsp;java.io.InputStreamReader;&nbsp;&nbsp;</span></span></li>
			<li>
				<span><span class="keyword">import</span><span>&nbsp;java.util.Map;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;</span></li>
			<li>
				<span><span class="keyword">public</span><span>&nbsp;</span><span class="keyword">class</span><span>&nbsp;ProcessBuilderTest&nbsp;{&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;restart()&nbsp;</span><span class="keyword">throws</span><span>&nbsp;IOException&nbsp;{&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;Runtime&nbsp;例子</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Process&nbsp;p;&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;test.bat中的命令是ipconfig/all</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;cmd&nbsp;=&nbsp;<span class="string">&quot;c:\\test\\test.bat&quot;</span><span>;&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>&nbsp;{&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;执行命令</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p&nbsp;=&nbsp;Runtime.getRuntime().exec(cmd);&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;取得命令结果的输出流</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStream&nbsp;fis&nbsp;=&nbsp;p.getInputStream();&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;用一个读输出流类去读</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InputStreamReader&nbsp;isr&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;InputStreamReader(fis);&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;用缓冲器读行</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;BufferedReader&nbsp;br&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;BufferedReader(isr);&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;line&nbsp;=&nbsp;<span class="keyword">null</span><span>;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;直到读完为止</span><span>&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">while</span><span>&nbsp;((line&nbsp;=&nbsp;br.readLine())&nbsp;!=&nbsp;</span><span class="keyword">null</span><span>)&nbsp;{&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(line);&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">catch</span><span>&nbsp;(IOException&nbsp;e)&nbsp;{&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;e.printStackTrace();&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;ProcessBuilder&nbsp;例子&nbsp;Java程序自重启</span><span>&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;用一条指定的命令去构造一个进程生成器</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessBuilder&nbsp;pb&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ProcessBuilder(</span><span class="string">&quot;java&quot;</span><span>,&nbsp;</span><span class="string">&quot;-jar&quot;</span><span>,&nbsp;</span><span class="string">&quot;Test3.jar&quot;</span><span>);&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;让这个进程的工作区空间改为F:\dist</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;这样的话,它就会去F:\dist目录下找Test.jar这个文件</span><span>&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pb.directory(<span class="keyword">new</span><span>&nbsp;File(</span><span class="string">&quot;F:\\dist&quot;</span><span>));&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;得到进程生成器的环境&nbsp;变量,这个变量我们可以改,</span><span>&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;改了以后也会反应到新起的进程里面去</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Map&lt;String,&nbsp;String&gt;&nbsp;map&nbsp;=&nbsp;pb.environment();&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Process&nbsp;p1&nbsp;=&nbsp;pb.start();&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;然后就可以对p做自己想做的事情了</span><span>&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="comment">//&nbsp;自己这个时候就可以退出了</span><span>&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.exit(<span class="number">0</span><span>);&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>}&nbsp;&nbsp;</span></li>
		</ol>
	</div>
	<br />
	<div class="dp-highlighter bg_java">
		<div class="bar">
			<div class="tools">
				<b>[java]</b> <a class="ViewSource" href="http://blog.csdn.net/sunshine_pb/article/details/39120927#" target="_blank" title="view plain">view plain</a><span data-mod="popu_168"> <a class="CopyToClipboard" href="http://blog.csdn.net/sunshine_pb/article/details/39120927#" target="_blank" title="copy">copy</a></span><span data-mod="popu_169"> </span></div>
		</div>
		<ol class="dp-j" start="1">
			<li class="alt">
				<span><span class="keyword">class</span><span>&nbsp;PBDemo&nbsp;{&nbsp;&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">public</span><span>&nbsp;</span><span class="keyword">static</span><span>&nbsp;</span><span class="keyword">void</span><span>&nbsp;main(String&nbsp;args[])&nbsp;{&nbsp;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="keyword">try</span><span>&nbsp;{&nbsp;&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessBuilder&nbsp;proc&nbsp;=&nbsp;<span class="keyword">new</span><span>&nbsp;ProcessBuilder(</span><span class="string">&quot;notepad.exe&quot;</span><span>,&nbsp;</span><span class="string">&quot;testfile&quot;</span><span>);&nbsp;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proc.start();&nbsp;&nbsp;&nbsp;</span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;<span class="keyword">catch</span><span>&nbsp;(Exception&nbsp;e)&nbsp;{&nbsp;&nbsp;&nbsp;</span></span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="string">&quot;Error&nbsp;executing&nbsp;notepad.&quot;</span><span>);&nbsp;&nbsp;&nbsp;</span></span></li>
			<li>
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</span></li>
			<li class="alt">
				<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;</span></li>
			<li>
				<span>}&nbsp; </span></li>
		</ol>
	</div>
</div>
